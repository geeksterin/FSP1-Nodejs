The file System(fs) module allows us to work with the file system on our computer.
FS has both Sync, Async methods for our use.
    - require("node:fs") or require("fs");

    - Sync methods
    - readFileSync(path,encoding=optional) = If path not exits or leads to a folder than error, it stores the data in buffer ,fs module internally uses the buffer, when you print the data you get the hexadecimal format, to make it human readlable you can provide the exncoding(utf-8), or print the toString of the data.
    - writeFileSync(path,data) = writes the given data to file(overrides the file), if the given path is not avalible ,than first it will create a file than store the data.
    - appendFileSync(path,data) = Appends the data to the file present in the given path, if the given path is not avalible ,than first it will create a file than store the data.
    - existsSync(path) = return true if the given path leades to any folder or file, otherwise false.
    - lstatSync(path) = if the path leds to nothing, throws error, otherwise retunrs an object with value about the the file or folder where the path leads.
        - lstatSync(path).isDirectory() = returns true if the path leads to a directory , otherwise false.
        - lstatSync(path).isFile() = returns true if the path leads to a file , otherwise false.
    - rmSync(path) = removes files, if path is not found than error.
    - rmSync(path,{recursive:true}) = to remove directory(recursively), if path is not found than error.
    - mkdirSync(path) = creates a dir to the path, if already exixts than throws error.
All the above written functions are blocking and Synchronous in nature, write some code to explain it properly.
    - Aysnc methods
    - Error first callbacks,
    - readFile(path,encoding=optional,errorFirstCallback=(error,data)=>{})
    - writeFile(path,data,errorFirstCallback=(err)=>{}); 
    - appendFile(path,data,errorFirstCallback=(err)=>{})
    - exists(path,(isPresent)=>{}) = The parameters for this callback are not consistent with other Node.js callbacks. Normally, the first parameter to a Node.js callback is an err parameter, optionally followed by other parameters. The fs.exists() callback has only one boolean parameter. This is one reason fs.access() is recommended instead of fs.exists().
    - access(path,(err)=>{}) = if exists than err obj will be null, otherwise error.
    - lstat(path,(err,stats)=>{}); = if the provided path is wrong ,than the err object will have the error value, otherwise null.
    - rm(filePath,(err)=>{}); = if file path is wrong or the path leads to an folder than err object will have error value, else null.
    - rm(folderPath,{recursive:true},(err)=>{}); = if file path is wrong than err object will have error value, else null.
    - mkdir(path,(err)=>{});
    - mkdir(path,{recursion:true},(err)=>{}); = to create folder recursively, explain with code.